8. What happens when you initialize a repository? Why do you need to do it?

	to tell git where to save the medata regarding that directory.
	
9. How is the staging area different from the working directory and the repository? What value do you think it offers?

	you can choose which modified doc(s) should go to a certain commit or just to commit the cganges you want instead of all.
	
10. How can you use the staging area to make sure you have one commit per logical change?

	by comparing the staging area with the most recent commit
	
11. What are some situations when branches would be helpful in keeping your history organized? How would branches help?

	when trying to make a proyect based on another one, or when the changes might be to big
	
12. How do the diagrams help you visualize the branch structure?

	they tells you which branch the commit belongs to
	
13. What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

	to get the functionalities or features that were coded separatly. because they have the same origin bt later they get divided and return together again.

14. What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?

	we don't have control which order the code will be set int
	we don't need to waste time doing it manually each time
	